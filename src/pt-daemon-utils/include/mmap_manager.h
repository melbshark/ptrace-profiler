////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __MMAP_MANAGER_H__
#define __MMAP_MANAGER_H__

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "common.h"

#include "json_utils.h"

#include <vector>

#include <string>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class MemoryMapRegion
{
public:

  MemoryMapRegion ()
    : start (0)
    , end (0)
    , offset (0)
    , inode (0)
  {
    memset (permissions, 0, sizeof (permissions));

    memset (pathname, 0, sizeof (pathname));
  }

  unsigned long long start;

  unsigned long long end;

  unsigned long long offset;

  unsigned long int inode;

  char permissions [5];

  char pathname [128];

};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class MemoryMapManager
{
public:

  MemoryMapManager ();

  ~MemoryMapManager ();

  size_t ParseJsonNode (const JsonNode &mapsRoot);

  size_t ParseUnixProcessMapsFile (const char *filename);

  const MemoryMapRegion *FindMapForAddress (uint64_t address) const;

  bool ConvertToJSON (std::string &json);

protected:

  std::vector <MemoryMapRegion> m_regions;

};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif // __MMAP_MANAGER_H__

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
